/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package schottcipher;

import java.util.Scanner;

public class SchottCipher {
    public Scanner scannerObject;

    public SchottCipher() {
        scannerObject = new Scanner(System.in);
    }

    
    /** 
     * This method will require an input of a message and then return the encrypted message
     * @param message The message to be encrypted
     * @return String The encrypted message
     */
    public String encryptMessage(String message) {
        String finalEncryption = "";
        String HHH = "";
        String AAAloop = "";
        int BBBloop = 0;
        String CCCloop = "a";
        String DDDloop = "a";
        String GGGloop = "";
        int i3loop = 0;
        int BBBfloop = 0;
        double BBBoddloop = 0;
        int nloop = 0;
        int n2loop = 1;
        int n3loop = 2;
        int i4loop = 0;
        // System.out.println(BBBoddloop);
        int i2loop = 0;
        AAAloop = message;
        BBBloop = AAAloop.length();
        BBBoddloop = BBBloop;
        BBBoddloop = BBBoddloop / 2;
        if (BBBoddloop + 0.5 == (BBBloop + 1) / 2) {
            BBBloop = BBBloop + 1;
            AAAloop = AAAloop + "x";

        }
        BBBloop = BBBloop / 2;
        // System.out.println(BBBloop);
        for (int a = BBBloop; a > 0; a--) {
            // System.out.println(AAAloop);
            // System.out.println(BBBfloop + " " + nloop + " " + n2loop + " " + n3loop);
            i2loop = BBBfloop + nloop;
            i3loop = BBBfloop + n2loop;
            i4loop = BBBfloop + n3loop;
            // System.out.println(i2loop + " " + i3loop);
            // System.out.println(i3loop + " " + i4loop);
            CCCloop = AAAloop.substring(i2loop, i3loop);
            // System.out.println(CCCloop);
            DDDloop = AAAloop.substring(i3loop, i4loop);
            // System.out.println(DDDloop);
            GGGloop = GGGloop + CCCloop + DDDloop;
            HHH = AAA(CCCloop, DDDloop);
            if (BBBfloop > 0) {
                finalEncryption = finalEncryption + "," + HHH;
            } else {
                finalEncryption = finalEncryption + HHH;
            }
            nloop = nloop + 1;
            n2loop = n2loop + 1;
            n3loop = n3loop + 1;
            BBBfloop = BBBfloop + 1;

        }
        return finalEncryption;
    }

    
    /** 
     * This method will require an input of a previously encrypted message, and then return the decrypted message
     * @param encryptedText The encrypted text
     * @return String The decrypted text
     */
    public String decryptMessage(String encryptedText) {
        String STOR = "";
        int FLIP = 0;
        int YYY = 0;
        int WWW = 0;
        int UUU = 0;
        String TTT = "";
        int QQQ = 0;
        int RRR = 0;
        String SSS = "";
        String XXX = "";
        int VVV = 1;
        String ZZZ = "";
        String v1a = "A";
        String v2a = "A";

        String DDD = "AAAAAAAAAAAAAAAAAAAAAAAAAA";

        ZZZ = encryptedText;
        YYY = ZZZ.length();
        SSS = ZZZ;
        for (int b = YYY; b > 0; b--) {
            XXX = ZZZ.substring(WWW, VVV);
            if (XXX.equals(",")) {
                UUU++;
            }

            WWW++;
            VVV++;

        }

        UUU = UUU + 1;

        // System.out.println(UUU);

        for (int i = UUU; i > 0; i--) {

            QQQ = SSS.indexOf(",");
            // System.out.println(QQQ);

            if (QQQ > -1) {
                TTT = SSS.substring(RRR, QQQ);

                SSS = SSS.substring(QQQ + 1);
                // System.out.println(SSS);
            } else {
                TTT = SSS;

            }
            // System.out.println(TTT);
            if (FLIP == 1) {
                v2a = TTT;

                // System.out.println(v2a);
                FLIP = 0;
            } else {

                v1a = TTT;
                // System.out.println(v1a);
                FLIP = 1;
            }

            if (!v1a.equals("A") && !v2a.equals("A")) {
                // System.out.println(FLIP);
                // System.out.println(v1a + " " + v2a);
                DDD = BBB(v1a, v2a);
                STOR = STOR + DDD;

                v1a = "A";
                v2a = "A";
            }

            // System.out.println(TTT);

            // 4.667,3249.000,-7.400,96.000
        }

        return STOR;
    }

    
    /** 
     * Automatically prompt the user to input a message to be encrypted and then return the encrypted message.
     * @return String
     */
    public String promptEncrypt() {
        String finalEncryption = "";
        String HHH = "";
        String AAAloop = "";
        int BBBloop = 0;
        String CCCloop = "a";
        String DDDloop = "a";
        String GGGloop = "";
        int i3loop = 0;
        int BBBfloop = 0;
        double BBBoddloop = 0;
        int nloop = 0;
        int n2loop = 1;
        int n3loop = 2;
        int i4loop = 0;
        // System.out.println(BBBoddloop);
        int i2loop = 0;
        System.out.print("Sentence to encrypt (no spaces): ");
        AAAloop = scannerObject.nextLine();
        BBBloop = AAAloop.length();
        BBBoddloop = BBBloop;
        BBBoddloop = BBBoddloop / 2;
        if (BBBoddloop + 0.5 == (BBBloop + 1) / 2) {
            BBBloop = BBBloop + 1;
            AAAloop = AAAloop + "x";

        }
        BBBloop = BBBloop / 2;
        // System.out.println(BBBloop);
        for (int a = BBBloop; a > 0; a--) {
            // System.out.println(AAAloop);
            // System.out.println(BBBfloop + " " + nloop + " " + n2loop + " " + n3loop);
            i2loop = BBBfloop + nloop;
            i3loop = BBBfloop + n2loop;
            i4loop = BBBfloop + n3loop;
            // System.out.println(i2loop + " " + i3loop);
            // System.out.println(i3loop + " " + i4loop);
            CCCloop = AAAloop.substring(i2loop, i3loop);
            // System.out.println(CCCloop);
            DDDloop = AAAloop.substring(i3loop, i4loop);
            // System.out.println(DDDloop);
            GGGloop = GGGloop + CCCloop + DDDloop;
            HHH = AAA(CCCloop, DDDloop);
            if (BBBfloop > 0) {
                finalEncryption = finalEncryption + "," + HHH;
            } else {
                finalEncryption = finalEncryption + HHH;
            }
            nloop = nloop + 1;
            n2loop = n2loop + 1;
            n3loop = n3loop + 1;
            BBBfloop = BBBfloop + 1;

        }
        return finalEncryption;

    }

    
    /** 
     * This message will automatically prompt the user to input a message to be decrypted and then return the decrypted message.
     * @return String
     */
    public String promptDecrypt() {
        String STOR = "";
        int FLIP = 0;
        int YYY = 0;
        int WWW = 0;
        int UUU = 0;
        String TTT = "";
        int QQQ = 0;
        int RRR = 0;
        String SSS = "";
        String XXX = "";
        int VVV = 1;
        String ZZZ = "";
        String v1a = "A";
        String v2a = "A";

        String DDD = "AAAAAAAAAAAAAAAAAAAAAAAAAA";

        System.out.println("Enter the encyrpted text (seperate with a commas, no spaces): ");
        ZZZ = scannerObject.nextLine();
        YYY = ZZZ.length();
        SSS = ZZZ;
        for (int b = YYY; b > 0; b--) {
            XXX = ZZZ.substring(WWW, VVV);
            if (XXX.equals(",")) {
                UUU++;
            }

            WWW++;
            VVV++;

        }

        UUU = UUU + 1;

        // System.out.println(UUU);

        for (int i = UUU; i > 0; i--) {

            QQQ = SSS.indexOf(",");
            // System.out.println(QQQ);

            if (QQQ > -1) {
                TTT = SSS.substring(RRR, QQQ);

                SSS = SSS.substring(QQQ + 1);
                // System.out.println(SSS);
            } else {
                TTT = SSS;

            }
            // System.out.println(TTT);
            if (FLIP == 1) {
                v2a = TTT;

                // System.out.println(v2a);
                FLIP = 0;
            } else {

                v1a = TTT;
                // System.out.println(v1a);
                FLIP = 1;
            }

            if (!v1a.equals("A") && !v2a.equals("A")) {
                // System.out.println(FLIP);
                // System.out.println(v1a + " " + v2a);
                DDD = BBB(v1a, v2a);
                STOR = STOR + DDD;

                v1a = "A";
                v2a = "A";
            }

            // System.out.println(TTT);

            // 4.667,3249.000,-7.400,96.000
        }

        return STOR;
    }
    
    private static String rounder(String CCC) {

        // System.out.println(N);
        int L = CCC.indexOf(".");
        String DDD = CCC.substring(L);
        String EEE = CCC.substring(0, L);
        // System.out.println("E: " + EEE);
        int LD = DDD.length();
        // System.out.println("D: " + DDD);
        // System.out.println("LD: " + LD);
        char FFF = 'a';
        char GGG = 'a';
        char HHH = 'a';
        char III = 'a';
        char JJJ = 'a';
        char GGGa = 'a';
        char HHHa = 'a';
        char IIIa = 'a';

        if (LD > 4) {

            FFF = DDD.charAt(4);
            GGG = DDD.charAt(3);
            HHH = DDD.charAt(2);
            III = DDD.charAt(1);
            JJJ = DDD.charAt(0);

            GGGa = GGG;
            HHHa = HHH;
            IIIa = III;

            // System.out.println("F: " + FFF);
            // System.out.println("G: " + GGG);
            // System.out.println("H: " + HHH);
            // System.out.println("I: " + III);

            if (FFF >= '5') {
                /// GGG = GGG + 1 (no nine)
                // if GGGa = 9, GGG = 0 and
                // HHH = HHH + 1 (no nine)
                // if HHHa = 9, HHH = 0 and
                // III = III + 1 (no nine)
                // if IIIa = 9, III = 0 and
                // rounderB EEE
                if (GGG == '0') {
                    GGG = '1';
                }
                if (GGGa == '1') {
                    GGG = '2';
                }
                if (GGGa == '2') {
                    GGG = '3';
                }
                if (GGGa == '3') {
                    GGG = '4';
                }
                if (GGGa == '4') {
                    GGG = '5';
                }
                if (GGGa == '5') {
                    GGG = '6';
                }
                if (GGGa == '6') {
                    GGG = '7';
                }
                if (GGGa == '7') {
                    GGG = '8';
                }
                if (GGGa == '8') {
                    GGG = '9';
                }
                if (GGGa == '9') {
                    GGG = '0';

                    if (HHHa == '0') {
                        HHH = '1';
                    }
                    if (HHHa == '1') {
                        HHH = '2';
                    }
                    if (HHHa == '2') {
                        HHH = '3';
                    }
                    if (HHHa == '3') {
                        HHH = '4';
                    }
                    if (HHHa == '4') {
                        HHH = '5';
                    }
                    if (HHHa == '5') {
                        HHH = '6';
                    }
                    if (HHHa == '6') {
                        HHH = '7';
                    }
                    if (HHHa == '7') {
                        HHH = '8';
                    }
                    if (HHHa == '8') {
                        HHH = '9';
                    }
                    if (HHHa == '9') {
                        HHH = '0';

                        if (IIIa == '0') {
                            III = '1';
                        }
                        if (IIIa == '1') {
                            III = '2';
                        }
                        if (IIIa == '2') {
                            III = '3';
                        }
                        if (IIIa == '3') {
                            III = '4';
                        }
                        if (IIIa == '4') {
                            III = '5';
                        }
                        if (IIIa == '5') {
                            III = '6';
                        }
                        if (IIIa == '6') {
                            III = '7';
                        }
                        if (IIIa == '7') {
                            III = '8';
                        }
                        if (IIIa == '8') {
                            III = '9';
                        }
                        if (IIIa == '9') {
                            III = '0';
                            EEE = rounderB(EEE);
                            // System.out.println("E2: " + EEE);
                        }

                    }

                }

            }

            String JJ = Character.toString(JJJ);
            String II = Character.toString(III);
            String HH = Character.toString(HHH);
            String GG = Character.toString(GGG);

            DDD = JJ + II + HH + GG;
            DDD = EEE + DDD;
            // System.out.println("D2: " + DDD);
        } else {
            LD = DDD.length();
            // System.out.println("LD: " + LD);
            if (LD != 4) {
                DDD = DDD + "0";
                LD = DDD.length();
                if (LD != 4) {
                    DDD = DDD + "0";
                    LD = DDD.length();
                    if (LD != 4) {
                        DDD = DDD + "0";

                    }
                }
            }

            DDD = EEE + DDD;
        }

        return DDD;

    }

    private static String rounderB(String AAA) {

        String CCC = AAA;
        int L = CCC.length();
        String storage = "";
        boolean Snine = true;
        char C = 'a';
        int LD = L;
        int LDA = L;
        // System.out.println("AAA: " + CCC);
        String Cc = "";
        char Ca = 'a';
        for (int i = 0; i < L; i++) {
            C = CCC.charAt(LD - 1);
            // System.out.println("C1: " + C);
            if (LDA == L) {
                Ca = C;
                if (Ca == '0') {
                    C = '1';
                    Snine = false;
                }
                if (Ca == '1') {
                    C = '2';
                    Snine = false;
                }
                if (Ca == '2') {
                    C = '3';
                    Snine = false;
                }
                if (Ca == '3') {
                    C = '4';
                    Snine = false;
                }
                if (Ca == '4') {
                    C = '5';
                    Snine = false;
                }
                if (Ca == '5') {
                    C = '6';
                    Snine = false;
                }
                if (Ca == '6') {
                    C = '7';
                    Snine = false;
                }
                if (Ca == '7') {
                    C = '8';
                    Snine = false;
                }
                if (Ca == '8') {
                    C = '9';
                    Snine = false;
                }
                if (Ca == '9') {
                    C = '0';
                    // Snine = true;
                }
                LDA = LDA - 2;
                // System.out.println("C2: " + C);
            }

            if (Snine == true && i > 0) {

                Ca = C;

                if (Ca == '0') {
                    C = '1';
                    Snine = false;
                }
                if (Ca == '1') {
                    C = '2';
                    Snine = false;
                }
                if (Ca == '2') {
                    C = '3';
                    Snine = false;
                }
                if (Ca == '3') {
                    C = '4';
                    Snine = false;
                }
                if (Ca == '4') {
                    C = '5';
                    Snine = false;
                }
                if (Ca == '5') {
                    C = '6';
                    Snine = false;
                }
                if (Ca == '6') {
                    C = '7';
                    Snine = false;
                }
                if (Ca == '7') {
                    C = '8';
                    Snine = false;
                }
                if (Ca == '8') {
                    C = '9';
                    Snine = false;
                }
                if (Ca == '9') {
                    C = '0';
                    // Snine = true;
                }
                // System.out.println("C3: " + C);

            }

            Cc = Character.toString(C);
            storage = Cc + storage;
            LD = LD - 1;
            // System.out.println("s: " + storage);

        }

        if (Snine == true) {
            storage = "1" + storage;
        }

        return storage;

    }

    private static String AAA(String letterone, String lettertwo) {
        // YOU ARE HERE LOOK HERE AT ME LOOK also toString works with doubles String s =
        // Double.toString(double)

        // String letterone = readLine("the first letter of your word: ");
        // String lettertwo = readLine("the second letter of your word: ");

        double vone = 0;
        double vtwo = 0;
        String AAA = "";
        String BBB = "";

        if (letterone.equals("a")) {
            vone = 1;
            AAA = vonecheck(vone, lettertwo);

        }
        if (letterone.equals("b")) {
            vone = 2;
            AAA = vonecheck(vone, lettertwo);

        }
        if (letterone.equals("c")) {
            vone = 3;
            AAA = vonecheck(vone, lettertwo);

        }
        if (letterone.equals("d")) {
            vone = 4;
            AAA = vonecheck(vone, lettertwo);

        }
        if (letterone.equals("e")) {
            vone = 5;
            AAA = vonecheck(vone, lettertwo);

        }
        if (letterone.equals("f")) {
            vone = 6;
            AAA = vonecheck(vone, lettertwo);

        }
        if (letterone.equals("g")) {
            vone = 7;
            AAA = vonecheck(vone, lettertwo);

        }
        if (letterone.equals("h")) {
            vone = 8;
            AAA = vonecheck(vone, lettertwo);

        }
        if (letterone.equals("i")) {
            vone = 9;
            AAA = vonecheck(vone, lettertwo);

        }
        if (letterone.equals("j")) {
            vone = 10;
            AAA = vonecheck(vone, lettertwo);

        }
        if (letterone.equals("k")) {
            vone = 11;
            AAA = vonecheck(vone, lettertwo);

        }
        if (letterone.equals("l")) {
            vone = 12;
            AAA = vonecheck(vone, lettertwo);

        }
        if (letterone.equals("m")) {
            vone = 13;
            AAA = vonecheck(vone, lettertwo);

        }
        if (letterone.equals("n")) {
            vone = 14;
            AAA = vonecheck(vone, lettertwo);

        }
        if (letterone.equals("o")) {
            vone = 15;
            AAA = vonecheck(vone, lettertwo);

        }
        if (letterone.equals("p")) {
            vone = 16;
            AAA = vonecheck(vone, lettertwo);

        }
        if (letterone.equals("q")) {
            vone = 17;
            AAA = vonecheck(vone, lettertwo);

        }
        if (letterone.equals("r")) {
            vone = 18;
            AAA = vonecheck(vone, lettertwo);

        }
        if (letterone.equals("s")) {
            vone = 19;
            AAA = vonecheck(vone, lettertwo);

        }
        if (letterone.equals("t")) {
            vone = 20;
            AAA = vonecheck(vone, lettertwo);

        }
        if (letterone.equals("u")) {
            vone = 21;
            AAA = vonecheck(vone, lettertwo);

        }
        if (letterone.equals("v")) {
            vone = 22;
            AAA = vonecheck(vone, lettertwo);

        }
        if (letterone.equals("w")) {
            vone = 23;
            AAA = vonecheck(vone, lettertwo);

        }
        if (letterone.equals("x")) {
            vone = 24;
            AAA = vonecheck(vone, lettertwo);

        }
        if (letterone.equals("y")) {
            vone = 25;
            AAA = vonecheck(vone, lettertwo);

        }
        if (letterone.equals("z")) {
            vone = 26;
            AAA = vonecheck(vone, lettertwo);

        }

        if (lettertwo.equals("a")) {
            vtwo = 1;
            BBB = vtwoCheckBefore(vtwo, letterone);

        }
        if (lettertwo.equals("b")) {
            vtwo = 2;
            BBB = vtwoCheckBefore(vtwo, letterone);

        }
        if (lettertwo.equals("c")) {
            vtwo = 3;
            BBB = vtwoCheckBefore(vtwo, letterone);

        }
        if (lettertwo.equals("d")) {
            vtwo = 4;
            BBB = vtwoCheckBefore(vtwo, letterone);

        }
        if (lettertwo.equals("e")) {
            vtwo = 5;
            BBB = vtwoCheckBefore(vtwo, letterone);

        }
        if (lettertwo.equals("f")) {
            vtwo = 6;
            BBB = vtwoCheckBefore(vtwo, letterone);

        }
        if (lettertwo.equals("g")) {
            vtwo = 7;
            BBB = vtwoCheckBefore(vtwo, letterone);

        }
        if (lettertwo.equals("h")) {
            vtwo = 8;
            BBB = vtwoCheckBefore(vtwo, letterone);

        }
        if (lettertwo.equals("i")) {
            vtwo = 9;
            BBB = vtwoCheckBefore(vtwo, letterone);

        }
        if (lettertwo.equals("j")) {
            vtwo = 10;
            BBB = vtwoCheckBefore(vtwo, letterone);

        }
        if (lettertwo.equals("k")) {
            vtwo = 11;
            BBB = vtwoCheckBefore(vtwo, letterone);

        }
        if (lettertwo.equals("l")) {
            vtwo = 12;
            BBB = vtwoCheckBefore(vtwo, letterone);

        }
        if (lettertwo.equals("m")) {
            vtwo = 13;
            BBB = vtwoCheckBefore(vtwo, letterone);

        }
        if (lettertwo.equals("n")) {
            vtwo = 14;
            BBB = vtwoCheckBefore(vtwo, letterone);

        }
        if (lettertwo.equals("o")) {
            vtwo = 15;
            BBB = vtwoCheckBefore(vtwo, letterone);

        }
        if (lettertwo.equals("p")) {
            vtwo = 16;
            BBB = vtwoCheckBefore(vtwo, letterone);

        }
        if (lettertwo.equals("q")) {
            vtwo = 17;
            BBB = vtwoCheckBefore(vtwo, letterone);

        }
        if (lettertwo.equals("r")) {
            vtwo = 18;
            BBB = vtwoCheckBefore(vtwo, letterone);

        }
        if (lettertwo.equals("s")) {
            vtwo = 19;
            BBB = vtwoCheckBefore(vtwo, letterone);

        }
        if (lettertwo.equals("t")) {
            vtwo = 20;
            BBB = vtwoCheckBefore(vtwo, letterone);

        }
        if (lettertwo.equals("u")) {
            vtwo = 21;
            BBB = vtwoCheckBefore(vtwo, letterone);

        }
        if (lettertwo.equals("v")) {
            vtwo = 22;
            BBB = vtwoCheckBefore(vtwo, letterone);

        }
        if (lettertwo.equals("w")) {
            vtwo = 23;
            BBB = vtwoCheckBefore(vtwo, letterone);

        }
        if (lettertwo.equals("x")) {
            vtwo = 24;
            BBB = vtwoCheckBefore(vtwo, letterone);

        }
        if (lettertwo.equals("y")) {
            vtwo = 25;
            BBB = vtwoCheckBefore(vtwo, letterone);

        }
        if (lettertwo.equals("z")) {
            vtwo = 26;
            BBB = vtwoCheckBefore(vtwo, letterone);

        }

        return AAA + "," + BBB;

    }

    private static String vtwoCheckBefore(double vtwo, String letterone) {

        String AAA = "";

        if (letterone.equals("a")) {
            vtwo = vtwo * 4;

            AAA = Double.toString(vtwo);

            AAA = rounder(AAA);

            return AAA;
        }
        if (letterone.equals("b")) {
            vtwo = vtwo * vtwo + 3;

            AAA = Double.toString(vtwo);

            AAA = rounder(AAA);

            return AAA;
        }
        if (letterone.equals("c")) {
            vtwo = vtwo + 5;

            AAA = Double.toString(vtwo);

            AAA = rounder(AAA);

            return AAA;
        }
        if (letterone.equals("d")) {
            vtwo = vtwo * vtwo + 3 * vtwo;

            AAA = Double.toString(vtwo);

            AAA = rounder(AAA);

            return AAA;
        }
        if (letterone.equals("e")) {
            vtwo = (vtwo * vtwo) / 6;

            AAA = Double.toString(vtwo);

            AAA = rounder(AAA);

            return AAA;
        }
        if (letterone.equals("f")) {
            vtwo = (vtwo * 9) - (vtwo * 7);

            AAA = Double.toString(vtwo);

            AAA = rounder(AAA);

            return AAA;
        }
        if (letterone.equals("g")) {
            vtwo = (vtwo * vtwo * vtwo) - (vtwo / 11);

            AAA = Double.toString(vtwo);

            AAA = rounder(AAA);

            return AAA;
        }
        if (letterone.equals("h")) {
            vtwo = (vtwo * 3) - 2 * vtwo;

            AAA = Double.toString(vtwo);

            AAA = rounder(AAA);

            return AAA;
        }
        if (letterone.equals("i")) {
            vtwo = 3 * ((vtwo / 3) - 3 * vtwo);

            AAA = Double.toString(vtwo);

            AAA = rounder(AAA);

            return AAA;
        }
        if (letterone.equals("j")) {
            vtwo = 2 * ((3 * vtwo) + 8);

            AAA = Double.toString(vtwo);

            AAA = rounder(AAA);

            return AAA;
        }
        if (letterone.equals("k")) {
            vtwo = vtwo * 10;

            AAA = Double.toString(vtwo);

            AAA = rounder(AAA);

            return AAA;
        }
        if (letterone.equals("l")) {
            vtwo = ((vtwo * 7) + 26) / 6 * vtwo;

            AAA = Double.toString(vtwo);

            AAA = rounder(AAA);

            return AAA;
        }
        if (letterone.equals("m")) {
            vtwo = (2 * ((vtwo * 2) + 3)) * (4 * ((vtwo / 2) + 1));

            AAA = Double.toString(vtwo);

            AAA = rounder(AAA);

            return AAA;
        }
        if (letterone.equals("n")) {
            vtwo = (vtwo * 3 % 5) + 3;

            AAA = Double.toString(vtwo);

            AAA = rounder(AAA);

            return AAA;
        }
        if (letterone.equals("o")) {
            vtwo = (((12 * vtwo) * (12 * vtwo)) - (11 * vtwo)) + 3;

            AAA = Double.toString(vtwo);

            AAA = rounder(AAA);

            return AAA;
        }
        if (letterone.equals("p")) {
            vtwo = (((4 * vtwo) - (7 * vtwo)) + 7);

            AAA = Double.toString(vtwo);

            AAA = rounder(AAA);

            return AAA;
        }
        if (letterone.equals("q")) {
            vtwo = vtwo % 7;

            AAA = Double.toString(vtwo);

            AAA = rounder(AAA);

            return AAA;
        }
        if (letterone.equals("r")) {
            vtwo = (vtwo + 7) % 19;

            AAA = Double.toString(vtwo);

            AAA = rounder(AAA);

            return AAA;
        }
        if (letterone.equals("s")) {
            vtwo = ((vtwo * 4) * (vtwo * -2)) - 8;

            AAA = Double.toString(vtwo);

            AAA = rounder(AAA);

            return AAA;
        }
        if (letterone.equals("t")) {
            vtwo = ((6 * vtwo) + 9) * ((6 * vtwo) + 9);

            AAA = Double.toString(vtwo);

            AAA = rounder(AAA);

            return AAA;
        }
        if (letterone.equals("u")) {
            vtwo = (vtwo * 4) + 6 + (vtwo % 3);

            AAA = Double.toString(vtwo);

            AAA = rounder(AAA);

            return AAA;
        }
        if (letterone.equals("v")) {
            vtwo = 0.5 * ((vtwo * 11) + 3);

            AAA = Double.toString(vtwo);

            AAA = rounder(AAA);

            return AAA;
        }
        if (letterone.equals("w")) {
            vtwo = (vtwo * 9) - 35;

            AAA = Double.toString(vtwo);

            AAA = rounder(AAA);

            return AAA;
        }
        if (letterone.equals("x")) {
            vtwo = (vtwo % 3) + 7;

            AAA = Double.toString(vtwo);

            AAA = rounder(AAA);

            return AAA;
        }
        if (letterone.equals("y")) {
            vtwo = ((vtwo * 6) + 3) % 32;

            AAA = Double.toString(vtwo);

            AAA = rounder(AAA);

            return AAA;
        }
        if (letterone.equals("z")) {
            vtwo = ((vtwo * 4) * (vtwo * 7)) - ((vtwo * 9) - 5);

            AAA = Double.toString(vtwo);

            AAA = rounder(AAA);

            return AAA;
        }
        return AAA;
    }

    private static String vonecheck(double vone, String lettertwo) {
        String AAA = "";

        if (lettertwo.equals("a")) {
            vone = vone / 2.0;

            AAA = Double.toString(vone);

            AAA = rounder(AAA);

            return AAA;
        }
        if (lettertwo.equals("b")) {

            vone = (vone + 53) % vone;

            AAA = Double.toString(vone);

            AAA = rounder(AAA);

            return AAA;
        }
        if (lettertwo.equals("c")) {
            vone = vone - 6.0;

            AAA = Double.toString(vone);

            AAA = rounder(AAA);

            return AAA;
        }
        if (lettertwo.equals("d")) {
            vone = (((vone + 93) % vone) + 65) % vone;

            AAA = Double.toString(vone);

            AAA = rounder(AAA);

            return AAA;
        }
        if (lettertwo.equals("e")) {

            vone = ((vone + 73) % vone) * 2.0;

            AAA = Double.toString(vone);

            AAA = rounder(AAA);

            return AAA;
        }
        if (lettertwo.equals("f")) {
            vone = (vone / 7.0) + (vone / 9.0);

            AAA = Double.toString(vone);

            AAA = rounder(AAA);

            return AAA;
        }
        if (lettertwo.equals("g")) {

            vone = (11.0 * vone) + ((((vone + 56) % vone) + 33) % vone);

            AAA = Double.toString(vone);

            AAA = rounder(AAA);

            return AAA;
        }
        if (lettertwo.equals("h")) {
            vone = (vone / 3.0) - 2.0;

            AAA = Double.toString(vone);

            AAA = rounder(AAA);

            return AAA;
        }
        if (lettertwo.equals("i")) {
            vone = (3 * vone + 3) / 3;

            AAA = Double.toString(vone);

            AAA = rounder(AAA);

            return AAA;
        }
        if (lettertwo.equals("j")) {
            vone = (vone / 3 - 2) / 2;

            AAA = Double.toString(vone);

            AAA = rounder(AAA);

            return AAA;
        }
        if (lettertwo.equals("k")) {
            vone = vone * 10;
            vone = vone / 9;

            AAA = Double.toString(vone);

            AAA = rounder(AAA);

            return AAA;
        }
        if (lettertwo.equals("l")) {
            vone = (vone / 6 + 2) / 7;

            AAA = Double.toString(vone);

            AAA = rounder(AAA);

            return AAA;
        }
        if (lettertwo.equals("m")) {
            vone = (((vone - 1) / 2) + 54) % vone;

            AAA = Double.toString(vone);

            AAA = rounder(AAA);

            return AAA;
        }
        if (lettertwo.equals("n")) {
            vone = (vone / 3) - 3;

            AAA = Double.toString(vone);

            AAA = rounder(AAA);

            return AAA;
        }
        if (lettertwo.equals("o")) {
            vone = (((vone / 12) + 121) % vone) + ((11 * vone) - 3);

            AAA = Double.toString(vone);

            AAA = rounder(AAA);

            return AAA;
        }
        if (lettertwo.equals("p")) {
            vone = (((vone / 4) + 25) % vone) + (vone / 7 - 7);

            AAA = Double.toString(vone);

            AAA = rounder(AAA);

            return AAA;
        }
        if (lettertwo.equals("q")) {
            vone = (vone + 98) % 43;

            AAA = Double.toString(vone);

            AAA = rounder(AAA);

            return AAA;
        }
        if (lettertwo.equals("r")) {
            vone = vone - 7;

            AAA = Double.toString(vone);

            AAA = rounder(AAA);

            return AAA;
        }
        if (lettertwo.equals("s")) {
            vone = (((vone / 2) - 7) + 100) % vone;

            AAA = Double.toString(vone);

            AAA = rounder(AAA);

            return AAA;
        }
        if (lettertwo.equals("t")) {
            vone = ((vone / 6) - 9) / ((vone / 6) - 9);

            AAA = Double.toString(vone);

            AAA = rounder(AAA);

            return AAA;
        }
        if (lettertwo.equals("u")) {
            vone = (vone / 4) - 6;

            AAA = Double.toString(vone);

            AAA = rounder(AAA);

            return AAA;
        }
        if (lettertwo.equals("v")) {
            vone = ((vone * 4) - 2) / 2;

            AAA = Double.toString(vone);

            AAA = rounder(AAA);

            return AAA;
        }
        if (lettertwo.equals("w")) {
            vone = 2 * ((vone / 5) - 5);

            AAA = Double.toString(vone);

            AAA = rounder(AAA);

            return AAA;
        }
        if (lettertwo.equals("x")) {
            vone = (3 / vone - 8);

            AAA = Double.toString(vone);

            AAA = rounder(AAA);

            return AAA;
        }
        if (lettertwo.equals("y")) {
            vone = (6 / vone - 3);

            AAA = Double.toString(vone);

            AAA = rounder(AAA);

            return AAA;
        }
        if (lettertwo.equals("z")) {
            vone = (((vone / 5) + 100) % vone) + (vone / 9 - 5);

            AAA = Double.toString(vone);

            AAA = rounder(AAA);

            return AAA;
        }
        return AAA;
    }

    private static String BBB(String v1, String v2) {

        //
        int i2 = 1;
        int i3 = 0;
        double AAA = 0;
        double BBB = 0;
        boolean CCC = false;
        String letteroneA = "a";
        String lettertwoA = "a";
        String DDD = "";
        String EEE = "";

        for (int i = 0; i < 676; i++) {
            if (i2 == 27) {
                i2 = 1;
                i3 = i3 + 1;
            }
            // System.out.println(i3 * 26 + i2);
            if (i3 == 0) {
                AAA = 1;
                lettertwoA = "a";
            }
            if (i3 == 1) {
                AAA = 2;
                lettertwoA = "b";
            }
            if (i3 == 2) {
                AAA = 3;
                lettertwoA = "c";
            }
            if (i3 == 3) {
                AAA = 4;
                lettertwoA = "d";
            }
            if (i3 == 4) {
                AAA = 5;
                lettertwoA = "e";
            }
            if (i3 == 5) {
                AAA = 6;
                lettertwoA = "f";
            }
            if (i3 == 6) {
                AAA = 7;
                lettertwoA = "g";
            }
            if (i3 == 7) {
                AAA = 8;
                lettertwoA = "h";
            }
            if (i3 == 8) {
                AAA = 9;
                lettertwoA = "i";
            }
            if (i3 == 9) {
                AAA = 10;
                lettertwoA = "j";
            }
            if (i3 == 10) {
                AAA = 11;
                lettertwoA = "k";
            }
            if (i3 == 11) {
                AAA = 12;
                lettertwoA = "l";
            }
            if (i3 == 12) {
                AAA = 13;
                lettertwoA = "m";
            }
            if (i3 == 13) {
                AAA = 14;
                lettertwoA = "n";
            }
            if (i3 == 14) {
                AAA = 15;
                lettertwoA = "o";
            }
            if (i3 == 15) {
                AAA = 16;
                lettertwoA = "p";
            }
            if (i3 == 16) {
                AAA = 17;
                lettertwoA = "q";
            }
            if (i3 == 17) {
                AAA = 18;
                lettertwoA = "r";
            }
            if (i3 == 18) {
                AAA = 19;
                lettertwoA = "s";
            }
            if (i3 == 19) {
                AAA = 20;
                lettertwoA = "t";
            }
            if (i3 == 20) {
                AAA = 21;
                lettertwoA = "u";
            }
            if (i3 == 21) {
                AAA = 22;
                lettertwoA = "v";
            }
            if (i3 == 22) {
                AAA = 23;
                lettertwoA = "w";
            }
            if (i3 == 23) {
                AAA = 24;
                lettertwoA = "x";
            }
            if (i3 == 24) {
                AAA = 25;
                lettertwoA = "y";
            }
            if (i3 == 25) {
                AAA = 26;
                lettertwoA = "z";
            }

            if (i2 == 1) {
                BBB = 1;
                letteroneA = "a";
            }
            if (i2 == 2) {
                BBB = 2;
                letteroneA = "b";
            }
            if (i2 == 3) {
                BBB = 3;
                letteroneA = "c";
            }
            if (i2 == 4) {
                BBB = 4;
                letteroneA = "d";
            }
            if (i2 == 5) {
                BBB = 5;
                letteroneA = "e";
            }
            if (i2 == 6) {
                BBB = 6;
                letteroneA = "f";
            }
            if (i2 == 7) {
                BBB = 7;
                letteroneA = "g";
            }
            if (i2 == 8) {
                BBB = 8;
                letteroneA = "h";
            }
            if (i2 == 9) {
                BBB = 9;
                letteroneA = "i";
            }
            if (i2 == 10) {
                BBB = 10;
                letteroneA = "j";
            }
            if (i2 == 11) {
                BBB = 11;
                letteroneA = "k";
            }
            if (i2 == 12) {
                BBB = 12;
                letteroneA = "l";
            }
            if (i2 == 13) {
                BBB = 13;
                letteroneA = "m";
            }
            if (i2 == 14) {
                BBB = 14;
                letteroneA = "n";
            }
            if (i2 == 15) {
                BBB = 15;
                letteroneA = "o";
            }
            if (i2 == 16) {
                BBB = 16;
                letteroneA = "p";
            }
            if (i2 == 17) {
                BBB = 17;
                letteroneA = "q";
            }
            if (i2 == 18) {
                BBB = 18;
                letteroneA = "r";
            }
            if (i2 == 19) {
                BBB = 19;
                letteroneA = "s";
            }
            if (i2 == 20) {
                BBB = 20;
                letteroneA = "t";
            }
            if (i2 == 21) {
                BBB = 21;
                letteroneA = "u";
            }
            if (i2 == 22) {
                BBB = 22;
                letteroneA = "v";
            }
            if (i2 == 23) {
                BBB = 23;
                letteroneA = "w";
            }
            if (i2 == 24) {
                BBB = 24;
                letteroneA = "x";
            }
            if (i2 == 25) {
                BBB = 25;
                letteroneA = "y";
            }
            if (i2 == 26) {
                BBB = 26;
                letteroneA = "z";
            }

            // System.out.println("number one: " + BBB);
            // System.out.println("number two: " + AAA);
            // System.out.println("letter one: " + letteroneA);
            // System.out.println("letter two: " + lettertwoA);
            DDD = vonecheck(AAA, letteroneA);
            EEE = vtwoCheckBefore(BBB, lettertwoA);

            // System.out.print(v1);
            // System.out.println(v2);
            // System.out.println(DDD);
            // System.out.println(EEE);
            if (DDD.equals(v1) && EEE.equals(v2)) {
                CCC = true;
                return lettertwoA + letteroneA;
            }

            i2 = i2 + 1;

        }

        if (CCC == false) {
            return "that is not a valid input";
        }

        return "AAAAAAAAAAAAAA";

    }

}
